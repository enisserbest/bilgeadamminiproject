{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/MainPage/addProduct/add-product/add-product.component.ts","webpack:///src/app/pages/MainPage/addProduct/add-product/add-product.component.html","webpack:///src/app/pages/MainPage/main-page.component.ts","webpack:///src/app/pages/MainPage/main-page.component.html","webpack:///src/app/pages/Models/login.ts","webpack:///src/app/pages/Models/products.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/new-user/new-user.component.ts","webpack:///src/app/pages/login/new-user/new-user.component.html","webpack:///src/app/pages/menu/menu/menu.component.ts","webpack:///src/app/pages/menu/menu/menu.component.html","webpack:///src/app/pages/users/Filter Pipe/user-filter.pipe.ts","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.component.html","webpack:///src/app/service/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","AppRoutingModule","forRoot","imports","PageRouterProvider","AppComponent","dataService","active","loginActive","newUserActive","setInterval","userControl","newUser","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddProductComponent","editForm","required","isNew","cancel","save","emit","value","closeForm","parameter","reset","undefined","MainPageComponent","http","openedDialog","getProduct","subscribe","response","products","editDataItem","dataItem","data","addProduct","console","log","deleteProduct","addAppParameter","editAppParameter","removeAppParameter","saveAppParameter","User","lastName","firstName","category","Product","LoginComponent","loginForm","preventDefault","user","username","password","loginUser","giris","NewUserComponent","newUserForm","categoryList","saveUser","MenuComponent","activatedRoute","router","menuItems","navigate","UserFilterPipe","filterText","toLocaleLowerCase","filter","p","indexOf","name","UsersComponent","getUser","userList","DataService","post","pipe","Response","json","product","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MenuComponent } from './pages/menu/menu/menu.component';\r\nimport { MainPageComponent } from './pages/MainPage/main-page.component';\r\nimport { UsersComponent } from './pages/users/users.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'ürünler', component: MainPageComponent },\r\n  { path: 'kullanıcılar', component: UsersComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\nexport const PageRouterProvider: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n","import { Component } from '@angular/core';\r\nimport { DataService } from './service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  public active:boolean =false\r\n  public loginActive:boolean = true;\r\n  public newUserActive: boolean =false;\r\n  constructor(private dataService: DataService) { \r\n\r\n    setInterval(() => {\r\n      this.active = this.dataService.userControl;\r\n      this.newUserActive = this.dataService.newUser;\r\n      if(this.active==true){\r\n        this.loginActive=false\r\n      }\r\n    }, 500);\r\n  }\r\n    ngOnInit() {\r\n      \r\n  }\r\n\r\n\r\n}\r\n","<!-- Main Page-->\r\n<div *ngIf=\"active\" class=\"col\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <app-menu></app-menu>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <router-outlet> </router-outlet>\r\n            <app-new-user></app-new-user>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Login Sayfası-->\r\n<div *ngIf=\"loginActive\" class=\"col-12\" class=\"col\">\r\n    <app-login></app-login>\r\n</div>\r\n\r\n<!-- Yeni kullanıcı Kayıt pop up açılması durumu-->\r\n<div *ngIf=\"newUserActive\" class=\"col-12\" class=\"col\">\r\n    <app-new-user></app-new-user>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainPageComponent } from './pages/MainPage/main-page.component';\r\nimport { MenuComponent } from './pages/menu/menu/menu.component';\r\nimport { UsersComponent } from './pages/users/users.component';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AddProductComponent } from './pages/MainPage/addProduct/add-product/add-product.component';\r\nimport { DialogsModule } from '@progress/kendo-angular-dialog';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { NewUserComponent } from './pages/login/new-user/new-user.component';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport { UserFilterPipe } from './pages/users/Filter Pipe/user-filter.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainPageComponent,\r\n    MenuComponent,\r\n    UsersComponent,\r\n    AddProductComponent,\r\n    LoginComponent,\r\n    NewUserComponent,\r\n    UserFilterPipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpModule,\r\n    GridModule,\r\n    BrowserAnimationsModule,\r\n    DialogsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DateInputsModule,\r\n    InputsModule,\r\n    DropDownsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Product } from 'src/app/pages/Models/products';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  public active = false;\n  public editForm: FormGroup = new FormGroup({\n    'id': new FormControl(''),\n    'name': new FormControl('', Validators.required),\n    'category': new FormControl('', Validators.required),\n\n  });\n\n  @Input() public isNew = false;\n\n  @Input() public set model(parameter: Product) {\n    this.editForm.reset(parameter);\n    this.active = parameter !== undefined;\n  }\n\n  @Output() cancel: EventEmitter<any> = new EventEmitter();\n  @Output() save: EventEmitter<Product> = new EventEmitter();\n\n  public onSave(e): void {\n    this.save.emit(this.editForm.value);\n    this.active = false;\n  }\n\n  public onCancel(e): void {\n    this.closeForm();\n  }\n\n  public closeForm(): void {\n    this.active = false;\n    this.cancel.emit();\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n","<kendo-dialog *ngIf=\"active\" (close)=\"closeForm()\" >\n    <kendo-dialog-titlebar>\n        Add New Product\n    </kendo-dialog-titlebar>\n\n      <form novalidate [formGroup]=\"editForm\">\n          <div class=\"row\">\n              <div class=\"col-sm-12\">\n                  <div class=\"form-group row\">\n                      <div class=\"col-sm-4\">\n                          <label for=\"name\" class=\"control-label\">Name</label>\n                      </div>\n                      <div class=\"col-sm-8\">\n                          <input id=\"name\" type=\"text\" class=\"form-control\" formControlName=\"name\" />\n                          <span class=\"k-tooltip k-tooltip-validation\"\n                                [hidden]=\"editForm.controls.name.valid || editForm.controls.name.pristine\">\n                              RoleName is required\n                          </span>\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <div class=\"col-sm-4\">\n                          <label for=\"description\" class=\"control-label\">Category</label>\n                      </div>\n                      <div class=\"col-sm-8\">\n                          <input id=\"category\" type=\"text\" class=\"form-control\" formControlName=\"category\" />\n                          <span class=\"k-tooltip k-tooltip-validation\"\n                                [hidden]=\"editForm.controls.category.valid || editForm.controls.category.pristine\">\n                                Category is required\n                          </span>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-sm-12\">\n                  <button type=\"button\" class=\"float-right btn btn-outline-success\" [disabled]=\"!editForm.valid\" (click)=\"onSave($event)\">Save</button> \n                  <button class=\"float-right btn btn-outline-danger\"  (click)=\"onCancel($event)\">Cancel</button>\n                  \n              </div>\n          </div>\n      </form>\n</kendo-dialog>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { Product } from '../Models/products';\r\nimport { Observable } from 'rxjs';\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.css'],\r\n  providers: [DataService]\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  constructor(private http: Http, private dataService: DataService) { }\r\n\r\n  public view: Observable<GridDataResult>;\r\n\r\n  public appParameters: Product[];\r\n  public editDataItem: Product;\r\n  public isNew: boolean;\r\n  public removedDataItem: Product;\r\n  public openedDialog = false;\r\n\r\n  ngOnInit() {  \r\n    this.getProduct();\r\n  }\r\n\r\n  products: Product[];\r\n\r\n\r\n  getProduct() {\r\n    this.dataService.getProduct().subscribe(response => {\r\n      this.products = response\r\n    })\r\n  }\r\n  public addAppParameter() {\r\n    this.editDataItem = new Product();\r\n    this.isNew = true;\r\n  }\r\n\r\n  public editAppParameter({ dataItem }) {\r\n    this.editDataItem = dataItem;\r\n    this.isNew = false;\r\n  }\r\n\r\n  public cancel() {\r\n    this.editDataItem = undefined;\r\n  }\r\n  public dialogFn: Function;\r\n\r\n\r\n  public saveAppParameter(data: any) {\r\n    this.dataService.addProduct(data).subscribe(data => {\r\n      console.log(\"save başarılı\");\r\n      this.getProduct();\r\n\r\n    })\r\n  }\r\n\r\n  public removeAppParameter(data: any) {\r\n    this.dataService.deleteProduct(data.dataItem).subscribe(data => {\r\n      console.log(\"silme işlemi başarılı\");\r\n      this.getProduct();\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n","<kendo-grid [kendoGridBinding]=\"products\" (add)=\"addAppParameter()\" (edit)=\"editAppParameter($event)\"\r\n  (remove)=\"removeAppParameter($event)\" [sortable]=\"true\" [filterable]=\"false\" [groupable]=\"false\" [resizable]=\"true\">\r\n\r\n  <ng-template kendoGridToolbarTemplate>\r\n    <button class=\"ngtof-btn ngtof-btn-default\" kendoGridAddCommand>\r\n      <span title=\"Olustur\" class=\"glyphicon glyphicon-plus-sign\" [ngStyle]=\"{'top': '0px', 'padding': '0 3px'}\">\r\n      </span>\r\n      Yeni\r\n    </button>\r\n  </ng-template>\r\n  <kendo-grid-column field=\"name\" title=\"Name\" width=\"65\"></kendo-grid-column>\r\n  <kendo-grid-column field=\"category\" title=\"Category\" width=\"65\"></kendo-grid-column>\r\n  <kendo-grid-column field=\"complete\" title=\"Status\" width=\"65\"></kendo-grid-column>\r\n  <kendo-grid-command-column width=\"65\" title=\"Options\" media=\"sm\">\r\n    <ng-template kendoGridCellTemplate>\r\n      <button kendoGridEditCommand [primary]=\"true\">Edit</button>\r\n      <button kendoGridRemoveCommand>Delete</button>\r\n    </ng-template>\r\n  </kendo-grid-command-column>\r\n</kendo-grid>\r\n\r\n\r\n<app-add-product [model]=\"editDataItem\" [isNew]=\"isNew\" (save)=\"saveAppParameter($event)\"\r\n  (cancel)=\"cancel()\">\r\n</app-add-product>\r\n","export class User {\r\n    constructor() {\r\n        this.id=0;\r\n        this.lastName =\"\"\r\n        this.firstName = \"\"\r\n        this.category =\"\"\r\n     }\r\n\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    category: string;\r\n}","export class Product{\r\n    id: number;\r\n    name: string;\r\n    category: string;\r\n    complete: boolean;\r\n}\r\n\r\n\r\n\t\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { User } from '../Models/login';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup = new FormGroup({\r\n    'username': new FormControl('', Validators.required),\r\n    'password': new FormControl('', Validators.required),\r\n  });\r\n\r\n  public isNew:boolean = false;\r\n\r\n  constructor(private dataService:DataService) { }\r\n  //public user: User = new User();\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public giris(e){\r\n    e.preventDefault()\r\n    var user= new User();\r\n    user.username = this.loginForm.value.username;\r\n    user.password = this.loginForm.value.password;\r\n    this.dataService.loginUser(user).subscribe(response => {     \r\n      if(response!=null){\r\n        this.dataService.userControl=true;\r\n        this.dataService.newUser=false;\r\n        DataService.user= response\r\n              \r\n      }\r\n      \r\n    })\r\n  }\r\n  public newUser(){\r\n    this.dataService.newUser =true\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"loginForm\">\r\n        <div class=\"row\">\r\n            <img src=\"../../../assets/image/ba.jpg\" width=\"500\" height=\"333\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"col-sm-2\">\r\n                    <label for=\"username\" class=\"control-label\">Kullanıcı Adı : </label>\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <input id=\"username\" type=\"text\" class=\"form-control\" formControlName=\"username\" />\r\n                    <span class=\"k-tooltip k-tooltip-validation\"\r\n                        [hidden]=\"loginForm.get('username').valid || loginForm.get('username').pristine\">\r\n                        Kullanıcı Adı Giriniz!\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"col-sm-2\" id=\"password\">\r\n                    <label for=\"password\" class=\"control-label\">Şifre : </label>\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\" />\r\n                    <span class=\"k-tooltip k-tooltip-validation\"\r\n                        [hidden]=\"loginForm.get('password').valid || loginForm.get('password').pristine\">\r\n                        Şifre giriniz!\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" id=\"buttons\">\r\n            <div class=\"col-sm-2\">\r\n                <button class=\"btn btn-primary float-right\" type=\"button\" [disabled]=\"!loginForm.valid \"\r\n                    (click)=\"giris($event)\">Giriş\r\n                </button>\r\n                <button class=\"btn btn-light float-right\" type=\"button\" (click)=\"newUser()\">\r\n                    Yeni Kullanıcı\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { User } from '../../Models/login';\r\nimport { DataService } from 'src/app/service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.css']\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n\r\n  public newUserActive = false;\r\n  public newUserForm: FormGroup = new FormGroup({\r\n    'firstName': new FormControl('', Validators.required),\r\n    'lastName': new FormControl('', Validators.required),\r\n    'username': new FormControl('', Validators.required),\r\n    'password': new FormControl('', Validators.required),\r\n    'category': new FormControl('', Validators.required),\r\n  });\r\n  public categoryList: Array<string>  = [\"Teknoloji\",\"Bilim\",\"Tarih\",\"Sanat\",\"Felsefe\"];\r\n\r\n\r\n  constructor(private dataService: DataService) {\r\n    setInterval(() => {\r\n      this.newUserActive = this.dataService.newUser;\r\n      \r\n    }, 500);\r\n   }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onSave(){\r\n    this.dataService.saveUser(this.newUserForm.value).subscribe(response =>{\r\n      console.log(\"user kaydı başarılı\");\r\n    })\r\n    this.dataService.newUser = false\r\n    this.newUserActive=false;\r\n  }\r\n\r\n  public onCancel(){\r\n    this.dataService.newUser =false;\r\n  }\r\n\r\n  public closeForm(){\r\n    this.dataService.newUser =false;\r\n\r\n  }\r\n}\r\n","<kendo-dialog *ngIf=\"newUserActive\" (close)=\"closeForm()\">\r\n    <kendo-dialog-titlebar>\r\n        Yeni Kullanıcı Kayıdı\r\n    </kendo-dialog-titlebar>\r\n\r\n    <form [formGroup]=\"newUserForm\">\r\n        <div class=\"col-sm-12\">\r\n\r\n            <div class=\"col-sm-5\">\r\n                <label for=\"firstName\" class=\"control-label\">Ad :</label>\r\n            </div>\r\n            <div class=\"col-sm-10\">\r\n                <input id=\"firstName\" type=\"text\" class=\"form-control\" formControlName=\"firstName\" />\r\n                <span class=\"k-tooltip k-tooltip-validation\"\r\n                    [hidden]=\"newUserForm.get('firstName').valid || newUserForm.get('firstName').pristine\">\r\n                    Ad Giriniz!\r\n                </span>\r\n            </div>\r\n\r\n            <div class=\"col-sm-5\">\r\n                <label for=\"lastName\" class=\"control-label\">Soyad :</label>\r\n            </div>\r\n            <div class=\"col-sm-10\">\r\n                <input id=\"lastName\" type=\"text\" class=\"form-control\" formControlName=\"lastName\" />\r\n                <span class=\"k-tooltip k-tooltip-validation\"\r\n                    [hidden]=\"newUserForm.get('lastName').valid || newUserForm.get('lastName').pristine\">\r\n                    Soyad Giriniz!\r\n                </span>\r\n            </div>\r\n\r\n            <div class=\"col-sm-7\">\r\n                <label for=\"username\" class=\"control-label\">Kullanıcı Adı:</label>\r\n            </div>\r\n            <div class=\"col-sm-10\">\r\n                <input id=\"username\" type=\"text\" class=\"form-control\" formControlName=\"username\" />\r\n                <span class=\"k-tooltip k-tooltip-validation\"\r\n                    [hidden]=\"newUserForm.get('username').valid || newUserForm.get('username').pristine\">\r\n                    Kullanıcı Adı Giriniz!\r\n                </span>\r\n            </div>\r\n\r\n            <div class=\"col-sm-5\">\r\n                <label for=\"password\" class=\"control-label\">Şifre</label>\r\n            </div>\r\n            <div class=\"col-sm-10\">\r\n                <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\" />\r\n                <span class=\"k-tooltip k-tooltip-validation\"\r\n                    [hidden]=\"newUserForm.get('password').valid || newUserForm.get('password').pristine\">\r\n                    Şifre giriniz!\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-5\">\r\n            <label for=\"category\" class=\"control-label\">Kategori</label>\r\n        </div>\r\n        <div class=\"col-sm-10\">\r\n            <kendo-dropdownlist formControlName=\"category\" [data]=\"categoryList\" required></kendo-dropdownlist>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <button type=\"button\" class=\"float-right btn btn-outline-success\" (click)=\"onSave()\">Kaydet</button>\r\n                <button class=\"float-right btn btn-outline-danger\" (click)=\"onCancel()\">İptal</button>\r\n\r\n            </div>\r\n        </div>\r\n    </form>\r\n</kendo-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) { }\r\n\r\n  menuItems: string[] = [\"ürünler\", \"kullanıcılar\"];\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  clickValue(data: any) {\r\n    console.log(data);\r\n    if (data === \"ürünler\") {\r\n      (<any>this.router).navigate(['/ürünler']);\r\n    }\r\n    else {\r\n      (<any>this.router).navigate(['/kullanıcılar']);\r\n    }\r\n  }\r\n\r\n}\r\n","<h4 class=\"page-header\">Kategoriler</h4>\r\n<ul class=\"list-group\">\r\n  <li (click)=\"clickValue($event.target.innerText)\" *ngFor=\"let category of menuItems\" class=\"list-group-item\">\r\n    {{category}}\r\n  </li>\r\n</ul>\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../Models/login';\n\n@Pipe({\n  name: 'userFilter'\n})\nexport class UserFilterPipe implements PipeTransform {\n  transform(value: User[], filterText?: string): User[] {\n\n    filterText = filterText ? filterText.toLocaleLowerCase() : null;\n    return filterText ? value.filter((p: User) => p.firstName.toLocaleLowerCase().indexOf(filterText) !== -1) : value;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { User } from '../Models/login';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  public filterText:string\r\n  constructor(private dataService: DataService) { }\r\n  userList: User[];\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  public getUser() {\r\n    this.dataService.getUser().subscribe(response => {\r\n      this.userList = response;\r\n    })\r\n  }\r\n}\r\n","<div class=\"col\">\r\n    <input class=\"form-control\" type=\"text\" placeholder=\"type something...\" [(ngModel)]=\"filterText\">\r\n  </div>\r\n  // Adım 2\r\n  <div class=\"col\" *ngIf=filterText>\r\n  <b>{{filterText}}</b> için arama yaptınız.\r\n  </div>\r\n\r\n<div class=\"col mt-3\">\r\n    <ul class=\"list-group\">\r\n        <li class=\"list-group-item\" *ngFor=\"let user of userList | userFilter:filterText\">\r\n            {{user.name}}\r\n        </li>\r\n    </ul>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError, tap } from \"rxjs/operators\";\r\nimport { Http, Response } from '@angular/http';\r\nimport { Product } from '../pages/Models/products';\r\nimport { User } from '../pages/Models/login';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  public userControl: boolean;\r\n  public newUser: boolean;\r\n  public static user: User = new User();\r\n\r\n  constructor(private http: Http) {\r\n    this.userControl = false;\r\n    this.newUser = false;\r\n    \r\n  }\r\n\r\n  public getProduct() {\r\n      return this.http.post(\"api/getProducts\", DataService.user).\r\n      pipe(map(Response => Response.json()));\r\n  }\r\n\r\n  \r\n  public getUser() {\r\n    return this.http.post(\"api/getUser\", DataService.user).\r\n    pipe(map(Response => Response.json()));\r\n}\r\n\r\n  public addProduct(product: Product) {\r\n    return this.http.post(\"api/addProduct\", product);\r\n  }\r\n\r\n  public deleteProduct(product: Product) {\r\n    return this.http.post(\"api/deleteProduct\", product);\r\n  }\r\n\r\n  public loginUser(user: User) {\r\n    return this.http.post(\"api/loginUser\", user).\r\n      pipe(map(Response => Response.json()));\r\n  }\r\n\r\n  public saveUser(user: User) {\r\n    return this.http.post(\"api/saveUser\", user);\r\n  }\r\n  public setUser(user: User) {\r\n    DataService.user = user;\r\n  }\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}